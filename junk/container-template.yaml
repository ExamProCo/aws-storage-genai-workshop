AWSTemplateFormatVersion: '2010-09-09'
Description: 'Deploy container of pgvector'

Parameters:
  InstanceType:
    Type: String
    Default: t2.micro
  ImageId:
    Type: String
    Default: ami-0bb2c57f7cfafb1cb # Amazon Linux 2023 kernel-6.1 AM x86 (64 bit)
  DBPassword:
    Type: String
    Description: Password for the PostgreSQL database
    MinLength: 8
    Default: Testing123!
    NoEcho: true
  AllowedCIDR:
    Type: String
    Default: 0.0.0.0/0
    Description: CIDR block allowed to access the instance
  VPCId:
    Type: AWS::EC2::VPC::Id
    Description: ID of the existing VPC to use
  PublicSubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: ID of the public subnet for the EC2 instance
    
Resources:
  # Security Group
  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for pgvector EC2 instance
      VpcId: !Ref VPCId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: !Ref AllowedCIDR
          Description: PostgreSQL access
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-sg'
          
  # IAM Role for EC2 with Session Manager
  EC2Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-ec2-role'
          
  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref EC2Role
        
  # EC2 Instance with PostgreSQL and pgvector
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref ImageId
      InstanceType: !Ref InstanceType
      SubnetId: !Ref PublicSubnetId
      SecurityGroupIds:
        - !Ref EC2SecurityGroup
      IamInstanceProfile: !Ref EC2InstanceProfile
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          
          # Install Docker
          yum update -y
          dnf update -y
          dnf install docker -y
          systemctl start docker
          systemctl enable docker
          usermod -a -G docker ec2-user

          # Install Docker Compose
          mkdir -p ~/.docker/cli-plugins/
          curl -SL https://github.com/docker/compose/releases/latest/download/docker-compose-linux-x86_64 -o ~/.docker/cli-plugins/docker-compose
          chmod +x ~/.docker/cli-plugins/docker-compose

          # Download App
          mkdir /app
          cd /app
          curl -O https://storage-genai-workshop.s3.ap-northeast-1.amazonaws.com/docker-compose.yaml
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-instance'
          
Outputs:
  InstanceId:
    Description: Instance ID of the pgvector EC2 instance
    Value: !Ref EC2Instance
    
  PublicIP:
    Description: Public IP address of the pgvector instance
    Value: !GetAtt EC2Instance.PublicIp
    
  DatabaseConnection:
    Description: PostgreSQL database connection string
    Value: !Sub 'psql -h ${EC2Instance.PublicIp} -p 5432 -U postgres'
    
  SessionManagerConnection:
    Description: Connect to the instance using AWS Session Manager
    Value: !Sub 'aws ssm start-session --target ${EC2Instance}'