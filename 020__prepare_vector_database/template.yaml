AWSTemplateFormatVersion: '2010-09-09'
Description: 'RDS PostgreSQL instance with pgvector extension enabled and public access'
Parameters:
  DBInstanceIdentifier:
    Type: String
    Default: 'vectordb'
    Description: 'Unique identifier for the RDS instance'
  
  DBName:
    Type: String
    Default: 'vectordb'
    Description: 'Name of the initial database'
  
  MasterUsername:
    Type: String
    Default: 'postgres'
    Description: 'Master username for the database'
  
  MasterUserPassword:
    Type: String
    NoEcho: true
    MinLength: 8
    Description: 'Master password for the database (min 8 characters)'
  
  DBInstanceClass:
    Type: String
    Default: 'db.t3.micro'
    AllowedValues:
      - db.t3.micro
      - db.t3.small
      - db.t3.medium
      - db.t3.large
    Description: 'RDS instance class'

  SubnetIds:
    Type: CommaDelimitedList
    Description: 'List of subnet IDs for DB subnet group (must be in different AZs)'

Resources:
  # Security Group for RDS
  DatabaseSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: 'Security group for PostgreSQL RDS instance with public access'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: 0.0.0.0/0
          Description: 'Allow PostgreSQL access from anywhere'
      Tags:
        - Key: Name
          Value: 'PostgreSQL-Public-Access-SG'

  # DB Subnet Group using provided subnets
  DatabaseSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupName: !Sub "${AWS::StackName}-db-subnet-group"
      DBSubnetGroupDescription: 'DB Subnet Group for PostgreSQL RDS instance'
      SubnetIds: !Ref SubnetIds
      Tags:
        - Key: Name
          Value: 'PostgreSQL-DB-Subnet-Group'

  # RDS PostgreSQL Instance
  DatabaseInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: !Ref DBInstanceIdentifier
      DBName: !Ref DBName
      Engine: postgres
      EngineVersion: '17.2'
      DBInstanceClass: !Ref DBInstanceClass
      AllocatedStorage: 20
      StorageType: gp2
      MasterUsername: !Ref MasterUsername
      MasterUserPassword: !Ref MasterUserPassword
      PubliclyAccessible: true
      BackupRetentionPeriod: 0 # Don't have backups so it spins up faster
      MultiAZ: false
      StorageEncrypted: true
      DeletionProtection: false
      VPCSecurityGroups:
        - !GetAtt DatabaseSecurityGroup.GroupId
      DBSubnetGroupName: !Ref DatabaseSubnetGroup
      Tags:
        - Key: Name
          Value: 'PostgreSQL with pgvector'

Outputs:
  DatabaseEndpoint:
    Description: 'RDS PostgreSQL endpoint'
    Value: !GetAtt DatabaseInstance.Endpoint.Address
    Export:
      Name: !Sub '${AWS::StackName}-DatabaseEndpoint'
  
  DatabasePort:
    Description: 'RDS PostgreSQL port'
    Value: !GetAtt DatabaseInstance.Endpoint.Port
    Export:
      Name: !Sub '${AWS::StackName}-DatabasePort'
  
  DatabaseName:
    Description: 'Database name'
    Value: !Ref DBName
    Export:
      Name: !Sub '${AWS::StackName}-DatabaseName'
  
  ConnectionString:
    Description: 'Connection string for the database'
    Value: !Sub 'postgresql://${MasterUsername}:${MasterUserPassword}@${DatabaseInstance.Endpoint.Address}:${DatabaseInstance.Endpoint.Port}/${DBName}'
  
  SecurityGroupId:
    Description: 'Security Group ID for the RDS instance'
    Value: !Ref DatabaseSecurityGroup
    Export:
      Name: !Sub '${AWS::StackName}-SecurityGroupId'
  
  PostDeploymentInstructions:
    Description: 'Instructions to enable pgvector extension'
    Value: 'Connect to the database and run: CREATE EXTENSION vector;'